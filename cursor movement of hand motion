import cv2
import mediapipe
import pyautogui

capture_hands = mediapipe.solutions.hands.Hands()

drawing_option = mediapipe.solutions.drawing_utils

screen_width , screen_height = pyautogui.size()
camera = cv2.VideoCapture(0) 
x1 = y1 = x2 = y2 = 0
while True: 

    _,image = camera.read() 
    
    image_height, image_width, _ = image.shape
    
    image = cv2.flip(image,1)
    
    rgb_image = cv2.cvtColor(image ,cv2.COLOR_BGR2RGB)
    
    output_hands = capture_hands.process(rgb_image)
    
    all_hands = output_hands.multi_hand_landmarks
    
    if all_hands:#if hand is detected
        for hand in all_hands:#then this must be applied to all the hands detected
            drawing_option.draw_landmarks(image,hand)
            one_hand_landmarks = hand.landmark
            
            for id, lm in enumerate(one_hand_landmarks):
                 
                x = int(lm.x * image_width)
                y = int(lm.y * image_height)

                # print(x,y)
                if id == 8:#for index finger
                    mouse_x = int(screen_width / image_width * x)
                    mouse_y = int(screen_width / image_height * y)
                    
                    cv2.circle(image,(x,y),10,(0,255,255))
                    
                    pyautogui.moveTo(mouse_x,mouse_y)
                    x1=x #index finger coordinates
                    y1=y
                if id == 4:#for thumb finger
                   cv2.circle(image,(x,y),10,(0,255,255))
                   x2 = x#thumb finger coordinates
                   y2 = y 
        dist = y2 - y1#to calculate the vertical distance
        print(dist)

        if(dist<20):
            pyautogui.click()
            print("clicked")
    cv2.imshow("Hand movement video capture",image)
    key = cv2.waitKey(100)
    if key == 27:
        break
camera.release()

cv2.destroyAllWindows()
